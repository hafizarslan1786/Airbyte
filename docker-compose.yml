version: '3.8'
networks:
  network:
    driver: bridge
services:
  mysql:
    container_name: mysql
    hostname: mysql
    depends_on:
      - postgres
    image: mysql:8.0
    command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: warehouse
#      MYSQL_USER: sandbox_user
#      MYSQL_PASSWORD: passpass
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - '3306:3306'
    volumes:
      - './docker/db/data:/var/lib/mysql'
      - './docker/db/my.cnf:/etc/mysql/conf.d/my.cnf'
      - './docker/db/sql:/docker-entrypoint-initdb.d'
    # networks:
    #   - network
    restart: unless-stopped

  clickhouse:
    image: clickhouse/clickhouse-server
    user: "101:101"
    container_name: clickhouse
    hostname: clickhouse
    volumes:
      - ./postgres/fs/volumes/clickhouse/etc/clickhouse-server/config.d/config.xml:/etc/clickhouse-server/config.d/config.xml
      - ./postgres/fs/volumes/clickhouse/etc/clickhouse-server/users.d/users.xml:/etc/clickhouse-server/users.d/users.xml
      - ./postgres/fs/volumes/clickhouse/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "127.0.0.1:8123:8123"
      - "127.0.0.1:9001:9000"
    depends_on:
      - postgres
    # networks:
    #   - network
    restart: unless-stopped
  postgres:
    container_name: postgres
    hostname: postgres
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: metadata
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/fs/volumes/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical" 